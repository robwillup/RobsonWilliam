@if(_items == null)
{
    <MudOverlay Visible="true" DarkBackground="true" AutoClose="true" ZIndex="9999">
        <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
    </MudOverlay>
}
else
{
    <MudGrid Spacing="2" Justify="Justify.Center" Class="pa-12">
        @foreach(GitHubItem item in _items)
        {
            string imagePath = item.Path.Replace("docs/", "").Replace(".md", ".gif");

            if (imagePath.Contains("Ethical_Hacking"))
            {
                imagePath = imagePath.Replace(".gif", ".jpeg");
            }

            imagePath = System.IO.Path.Combine("https://raw.githubusercontent.com/robwillup/mithrandir/main/assets/", imagePath);
            string[] nameParts = item.Name.Split("@");
            string date = DateTime.Parse(nameParts[0]).ToShortDateString();
            string title = nameParts[1].Replace("_", " ").Replace(".md", "");
            string encodedPath = System.Web.HttpUtility.UrlEncode(item.Path);
            <MudItem Style="width:360px;height:300px;margin-bottom:50px;">
                <MudCard>
                    <MudCardMedia Image=@imagePath Style="width: 200px; height: 200px; margin-left: 20%" />
                    <MudCardContent>
                        <MudText Typo="Typo.h5">@title</MudText>
                        <MudText>@date</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        @* <MudButton Variant="Variant.Text" Color="Color.Primary">Share</MudButton> *@
                        <MudButton Variant="Variant.Text" Color="Color.Primary" Href=@($"/article?Id={encodedPath}")>Read</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}

@code {
    [Parameter]
    public int Max { get; set; }

    [Inject]
    protected Services.IBlogService? BlogService {get;set;}
    private List<GitHubItem>? _items;

    @* protected override async Task OnInitializedAsync()
    {
        _items = await BlogService.GetBlogPostsAsync();
    } *@
}
